import React, { useEffect, useState } from "react";
import "bootstrap/dist/css/bootstrap.min.css";
import axios from "axios";
import { Link } from "react-router-dom";

const apiUrl = "https://67cc190f3395520e6af72555.mockapi.io/hotel";

const HostelManagementPage = () => {
  const [hostels, setHostels] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [editingHostel, setEditingHostel] = useState(null);
  const [formData, setFormData] = useState({
    nameHotel: "",
    locationHotel: "",
    priceHotel: "",
    raitingHotel: ""
  });
  const [isAdding, setIsAdding] = useState(false);

  const fetchData = async () => {
    setLoading(true);
    try {
      const res = await axios.get(apiUrl);
      setHostels(res.data);
      setError(null);
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:", error);
      setError("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchData();
  }, []);

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData({
      ...formData,
      [name]: value,
    });
  };

  const resetForm = () => {
    setFormData({
      nameHotel: "",
      locationHotel: "",
      priceHotel: "",
      raitingHotel: "",
    });
    setEditingHostel(null);
    setIsAdding(false);
  };

  const handleEdit = (hostel) => {
    setEditingHostel(hostel.id);
    setFormData({
      nameHotel: hostel.nameHotel,
      locationHotel: hostel.locationHotel,
      priceHotel: hostel.priceHotel,
      raitingHotel: hostel.raitingHotel,
    });
    setIsAdding(false);
  };

  const handleAdd = () => {
    setIsAdding(true);
    setEditingHostel(null);
    resetForm();
  };

  const handleDelete = async (id) => {
    if (window.confirm("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ö–æ—Å—Ç–µ–ª?")) {
      setLoading(true);
      try {
        await axios.delete(`${apiUrl}/${id}`);
        setHostels(hostels.filter(hostel => hostel.id !== id));
        setError(null);
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:", error);
        setError("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ö–æ—Å—Ç–µ–ª. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
      } finally {
        setLoading(false);
      }
    }
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);

    try {
      if (editingHostel) {
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ö–æ—Å—Ç–µ–ª–∞
        const response = await axios.put(`${apiUrl}/${editingHostel}`, formData);
        setHostels(hostels.map(hostel => 
          hostel.id === editingHostel ? response.data : hostel
        ));
      } else {
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ö–æ—Å—Ç–µ–ª–∞
        const response = await axios.post(apiUrl, formData);
        setHostels([...hostels, response.data]);
      }
      resetForm();
      setError(null);
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:", error);
      setError("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.");
    } finally {
      setLoading(false);
    }
  };

  const handleCancel = () => {
    resetForm();
  };

  return (
    <div>
      {/* Header */}
      <header className="bg-dark text-white p-3 shadow d-flex justify-content-between align-items-center">
        <h2 className="m-0">‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ö–æ—Å—Ç–µ–ª–∞–º–∏</h2>
        <div>
          <Link to="/hostels" className="btn btn-outline-light me-2">
            üîô –ö —Å–ø–∏—Å–∫—É —Ö–æ—Å—Ç–µ–ª–æ–≤
          </Link>
          <button className="btn btn-success" onClick={handleAdd}>
            ‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ö–æ—Å—Ç–µ–ª
          </button>
        </div>
      </header>

      {/* Content */}
      <main className="container my-4">
        {error && (
          <div className="alert alert-danger mb-4" role="alert">
            {error}
          </div>
        )}

        {/* –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
        {(isAdding || editingHostel) && (
          <div className="card mb-4 shadow-sm">
            <div className="card-header bg-primary text-white">
              <h4 className="m-0">
                {editingHostel ? "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ö–æ—Å—Ç–µ–ª–∞" : "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ö–æ—Å—Ç–µ–ª–∞"}
              </h4>
            </div>
            <div className="card-body">
              <form onSubmit={handleSubmit}>
                <div className="row mb-3">
                  <div className="col-md-6">
                    <label htmlFor="nameHotel" className="form-label">–ù–∞–∑–≤–∞–Ω–∏–µ —Ö–æ—Å—Ç–µ–ª–∞</label>
                    <input
                      type="text"
                      className="form-control"
                      id="nameHotel"
                      name="nameHotel"
                      value={formData.nameHotel}
                      onChange={handleInputChange}
                      required
                    />
                  </div>
                  <div className="col-md-6">
                    <label htmlFor="locationHotel" className="form-label">–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ</label>
                    <input
                      type="text"
                      className="form-control"
                      id="locationHotel"
                      name="locationHotel"
                      value={formData.locationHotel}
                      onChange={handleInputChange}
                      required
                    />
                  </div>
                </div>
                <div className="row mb-3">
                  <div className="col-md-6">
                    <label htmlFor="priceHotel" className="form-label">–¶–µ–Ω–∞ (—Å–æ–º)</label>
                    <input
                      type="number"
                      className="form-control"
                      id="priceHotel"
                      name="priceHotel"
                      value={formData.priceHotel}
                      onChange={handleInputChange}
                      required
                    />
                  </div>
                  <div className="col-md-6">
                    <label htmlFor="raitingHotel" className="form-label">–†–µ–π—Ç–∏–Ω–≥ (–æ—Ç 1 –¥–æ 5)</label>
                    <input
                      type="number"
                      className="form-control"
                      id="raitingHotel"
                      name="raitingHotel"
                      min="1"
                      max="5"
                      step="0.1"
                      value={formData.raitingHotel}
                      onChange={handleInputChange}
                      required
                    />
                  </div>
                </div>
                <div className="d-flex justify-content-end">
                  <button type="button" className="btn btn-outline-secondary me-2" onClick={handleCancel}>
                    –û—Ç–º–µ–Ω–∞
                  </button>
                  <button type="submit" className="btn btn-primary" disabled={loading}>
                    {loading ? (
                      <>
                        <span className="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                        –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...
                      </>
                    ) : (
                      "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"
                    )}
                  </button>
                </div>
              </form>
            </div>
          </div>
        )}

        {/* –¢–∞–±–ª–∏—Ü–∞ —Ö–æ—Å—Ç–µ–ª–æ–≤ */}
        <div className="card shadow-sm">
          <div className="card-header bg-light d-flex justify-content-between align-items-center">
            <h4 className="m-0">–°–ø–∏—Å–æ–∫ —Ö–æ—Å—Ç–µ–ª–æ–≤</h4>
            <button className="btn btn-sm btn-outline-secondary" onClick={fetchData}>
              üîÑ –û–±–Ω–æ–≤–∏—Ç—å
            </button>
          </div>
          <div className="card-body p-0">
            {loading && !isAdding && !editingHostel ? (
              <div className="text-center my-4">
                <div className="spinner-border text-primary" role="status" />
                <p className="mt-3">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</p>
              </div>
            ) : (
              <table className="table table-hover mb-0">
                <thead className="table-light text-center">
                  <tr>
                    <th>#</th>
                    <th>–ù–∞–∑–≤–∞–Ω–∏–µ</th>
                    <th>–õ–æ–∫–∞—Ü–∏—è</th>
                    <th>–¶–µ–Ω–∞</th>
                    <th>–†–µ–π—Ç–∏–Ω–≥</th>
                    <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                  </tr>
                </thead>
                <tbody>
                  {hostels.map((hostel, index) => (
                    <tr key={hostel.id} className="align-middle">
                      <td className="text-center">{index + 1}</td>
                      <td><strong>{hostel.nameHotel}</strong></td>
                      <td>{hostel.locationHotel}</td>
                      <td className="text-center">{hostel.priceHotel} —Å–æ–º</td>
                      <td className="text-center">{hostel.raitingHotel} ‚≠ê</td>
                      <td className="text-center">
                        <button
                          className="btn btn-sm btn-outline-primary me-2"
                          onClick={() => handleEdit(hostel)}
                        >
                          ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                        </button>
                        <button
                          className="btn btn-sm btn-outline-danger"
                          onClick={() => handleDelete(hostel.id)}
                        >
                          üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
                        </button>
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            )}
          </div>
        </div>
        
        {!loading && hostels.length === 0 && (
          <div className="alert alert-warning text-center mt-3">
            –•–æ—Å—Ç–µ–ª–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç. –î–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π —Ö–æ—Å—Ç–µ–ª —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å —Ö–æ—Å—Ç–µ–ª".
          </div>
        )}
      </main>

      {/* Footer */}
      <footer className="bg-light py-3 text-center text-muted mt-4 border-top">
        ¬© {new Date().getFullYear()} Paradise View | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã
      </footer>
    </div>
  );
};

export default HostelManagementPage;